(function () {
    var variableDeclarator, createVar, VariableDeclaration;
    var map = function (f, vec) {
        return Array.prototype.map.call(vec, function () {
            return f(arguments[0]);
        });
    };
    variableDeclarator = function (id, init) {
        if (init == null)
            init = null;
        return {
            type: 'VariableDeclarator',
            id: id,
            init: init
        };
    };
    createVar = function (declaration) {
        var name, init;
        name = declaration[0];
        init = declaration[1];
        switch (false) {
        case !(declaration.length === 2 && arguments.length === 1):
            return variableDeclarator(name, init);
        case !(arguments.length === 1):
            return variableDeclarator(declaration);
        }
    };
    VariableDeclaration = function (declarations) {
        return {
            type: 'VariableDeclaration',
            declarations: map(createVar, declarations),
            kind: 'var'
        };
    };
    return module.exports = VariableDeclaration;
}());