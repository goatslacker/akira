// Generated by Akira v0.0.1
(function () {
  var convertToProperty, ObjectExpression;
  var map = function (f, vec) {
    return Array.prototype.map.call(vec, function () {
      return f(arguments[0]);
    });
  };
  var _$tg = require('tg').tg;
  convertToProperty = function (prop) {
    _$tg([Array], [prop]);
    return _$tg(Object, function () {
      var _$v, key, value;
      _$v = prop;
      key = _$v[0];
      value = _$v[1];
      return {
        type: 'Property',
        key: key,
        value: value,
        kind: 'init'
      };
    }.apply(this, arguments));
  };
  ObjectExpression = function (props) {
    _$tg([Array], [props]);
    return _$tg(Object, function () {
      return {
        type: 'ObjectExpression',
        properties: map(convertToProperty, props)
      };
    }.apply(this, arguments));
  };
  module.exports = ObjectExpression;
}());