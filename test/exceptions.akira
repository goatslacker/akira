try {
  a = 1
} catch ex {
 b = 1
}

assert a 1
assert b undefined

try {
  raise 'Ah!'
} catch ex {
  c = 3
}
assert c 3

try f = 2
catch err raise err
assert f 2

try k = 1 catch ex g = 2
assert k 1

j = fn [x] { try { 1 } catch ex { none } }
j 0 | assert 1
