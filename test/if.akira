foo :: Boolean -> Boolean
foo = fn [x]
  if x
    if not x then true else false
  else
    if not x then true else false

foo-true = foo true
foo-false = foo false

assert foo-true false
assert foo-false true

a = if false then true else if true then true else false
assert a true

[c d] = if true then [0 1] else [4 5]
assert c 0
assert d 1

if foo
  true
else
  false

if foo then true else false
