# Runtime tests for Memory

# Functions.mem
array = [1, 2, 3]

head: array | (\(a) -> print: a == 1)
last: array | (\(a) -> print: a == 3)

# IIFE
!() -> (
# Testing foldr, expressions in arguments, anonymous functions
  lastEl(a) -> foldl: (\(a, b) -> flip: consts, a, b), a
  lastEl: array | (\(a) -> print: a == 3 )
)

# Pipes, Anonymous functions, print:ions
array | (\(list) -> map: square, list) | (\(a) -> (
  print: a
))

fact(n) -> if n == 1 (n) (prod: n, (fact: n - 1))
fact: 4 | print

# Done.
print:'All tests completed'
