ok-deep = fn [a b]
  assert true (foldl (&&) (zip-with (==) a b))

a = [1 2 3]

ok-deep [1] ++ [2], [1 2]

ok-deep 1 +: [2], [1 2]

ok-deep [1] ++ [2] ++ [3], [1 2 3]

assert not true, false
assert not false, true

assert 1 < 2, true
assert 2 > 1, true
assert 2 >= 2, true
assert 3 <= 1, false

assert 1 + 1, 2
assert 1 - 1, 0
assert 3 * 0, 0
assert 4 / 2, 2

a | foldl (+) | assert 6
a | foldl (*) | assert 6
a | map (* 2) | ok-deep [2 4 6]
a | map (- 1) | ok-deep [0 1 2]

foldl (**) [4 2] | assert 16
4 ** 2 | assert 16
4 | (** 2) | assert 16

a1 = fn [n] n - 1
a2 = fn [n] n - 2
a3 = fn [n] n - 3
