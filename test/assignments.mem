a = 1
b = 2
assert: a, 1
assert: b, 2
(\none {
  # local a, no shadowing
  a = 3
  assert: a, 3
}): none

(\none {
  # although we can reference a
  b = a - 1
  assert: b, 0
}): none

assert: 3, a + b

c = if true then 1 else 2
d = if 1 then true else if 2 then true else false
e = f = g = 1

assert: c, 1
assert: d, true
assert: e, f
assert: f, g
assert: g, 1

# assigning
a1 = 1
assert: a1, 1
a2 = [1]
assert-deep: a2, [1]
a3 = ({ a = 1 })
assert: a3.a, 1
a4 = 2 * 4
assert: a4, 8
a5 = (\x -> x)
a5: 4 | assert: @, 4
a6 = (if true then 1 else 2)
assert: a6, 1
a7 = a5: 12
assert: a7, 12
a8 = 6 | a5
assert: a8, 6
