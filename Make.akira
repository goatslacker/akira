fs = require: 'fs'
path = require: 'path'
akira = require: (path.join: process.env.PWD 'lib/akira/index.js')

time = fn [f] {
  start = Date.now!
  f!
  end = Date.now!
  print: 'Time {{end - start}}ms'
}

test-results = fn [x name len]
  true ? {
    print: 'âˆš {{name}} {{len}}'
    true
  }
  else ? {
    print: 'x {{name}}'
    false
  }

test-file = fn [name] {
  assertions = []
  ok  = fn [a b] assertions.push: a == b
  ok-deep = fn [a b]
    zip-with: (==) a b | foldl: (&&) | ok: true

  akira.run: ('test/' ++ name) { @ok @ok-deep }

  test-results: (foldl: (&&) assertions),
    (name.replace: '.akira' ''),
    assertions.length
}

test = fn []
  time: (fn [] {
    results = fs.readdir-sync: 'test' | map: test-file | foldl: (&&)

    print: ''

    if results == true
      then print: 'OK!'
      else print: 'Fail'
  })

build = fn []
  time: (fn [] {
    akira.compile: 'src/lang' 'lib/lang'
    print: 'Built.'
  })

export {
  @test
  @build
}
