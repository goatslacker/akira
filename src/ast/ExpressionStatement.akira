convert-to-expression-statement = match
  [expr 'ExpressionStatement'] expr
  [expr 'TryStatement'] expr
  [expr 'IfStatement'] expr
  [expr 'SwitchStatement'] expr
  [expr 'ForInStatement'] expr
  [expr 'ReturnStatement'] expr
  [expr 'BlockStatement'] expr
  [expr 'ThrowStatement'] expr
  [expr 'VariableDeclaration'] expr
  [else] { :type 'ExpressionStatement' :expression expr }

ExpressionStatement :: Map | Vector -> Map | Vector
ExpressionStatement = fn [expr]
  if expr is Vector
    then expr
    else convert-to-expression-statement expr expr.type


module.exports = ExpressionStatement
