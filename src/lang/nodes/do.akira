CallExpression = require 'ast/CallExpression'
Identifier = require 'ast/Identifier'
MemberExpression = require 'ast/MemberExpression'

ast = require 'ast'

IdenThen = Identifier 'then'

Do = class {
  [@call @f @e] { this }

  compile [context] {
    call = ast this.call context
    f = ast this.f context
    e = if this.e
      then [(ast this.e context)]
      else []

    CallExpression (MemberExpression call IdenThen) ([f] ++ e)
  }
}

module.exports = Do
