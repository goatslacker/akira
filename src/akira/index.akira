util = require: 'util'
me = require: '../../package.json'

{ @akira @run @lex @gen-ast @benchmark } = import './compiler.akira'
{ @write-file @get-files } = import './fisy.akira'
start-repl = import './repl.akira'
watch = import './watchman.akira'

exports = fn [name code from to]
  write-file: name ('module.exports = ' ++ code) from to

analyse = fn [name body]
  body |
  (fn [data] util.inspect: data false 50) |
  output: none

load-makefile = fn [key opts]
  fn [name code] {
    make = run: name ('module.exports = ' ++ code)
    (make !! key): opts
  }

output = fn [filename]
  akira: (fn [name code] util.puts: code) filename

cli = fn [action [a b & c]]
  'compile' ? akira: (fn [name code] exports: name code a b) a
  'output'  ? output: a
  'run'     ? akira: run a
  'tokens'  ? akira: analyse a lex
  'ast'     ? akira: analyse a gen-ast
  'version' ? 'akira ' ++ me.version | output: none
  'watch'   ? watch: a (fn [] akira: wrap a)
  'make'    ? akira: (load-makefile: a (b || []) ++ c) 'Make.akira'
  'help'    ? require: './help'
  else      ? start-repl!


export {
  @cli
  @output
}

    --  'bench'   ? akira: analyse filename benchmark
    --  'debug'   ? akira: (fn [] none) filename
    --  'test'    ? akira: run 'test/tests.akira'
