fs = require-awaitable 'fs'
path = require 'path'

File = class {
  [@name @code] { this }
}

get-file = async [filepath] {
  file = path.join process.env.PWD filepath
  data = await fs.read-file-async file
  new File filepath (show data)
}

get-all-files = async [filepath] {
  st = await fs.stat-async filepath

  if st.is-directory! then {
    ls = await fs.readdir-async filepath
    files = await map ls fn [file] {
      fullpath = path.join filepath file
      get-all-files fullpath
    }
    flatten files
  } else {
    akira-files = filter (-> (&0.index-of '.akira') >= 0) [filepath]
    await map akira-files (-> get-file &0)
  }
}

write-file = async [file code from (to = (path.dirname file))] {
  filename = (path.relative from file) || (path.basename file)
  write-path = filename.replace '.akira' '.js' | path.join to
  await fs.write-file-async write-path code
}

export { @get-all-files @write-file @get-file }
