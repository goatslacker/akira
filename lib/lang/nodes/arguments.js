// Generated by Akira v0.0.1
!function() {
function map(f,a){if(arguments.length==1)return function(a){return map(f,a);};var i=0,l=a.length,r=Array(l);for(i;i<l;i+=1)r[i]=f(a[i]);return r;}
var ast, flatten, Arguments;
ast = require('ast');
flatten = function (args) {
  var flatArgs;
  flatArgs = [];
  args.forEach(function (arg) {
    return arg instanceof Arguments ? flatArgs.push.apply(flatArgs, flatten(arg.args)) : flatArgs.push(arg);
  });
  return flatArgs;
};
Arguments = function () {
  var _$Class;
  _$Class = function () {
    this.args = flatten(Array.prototype.slice.call(arguments, 0));
  };
  _$Class.prototype.compile = function (context) {
    return map(function () {
      return ast(arguments[0], context);
    }, this.args);
  };
  return _$Class;
}.apply(this, arguments);
return module.exports = Arguments;
}();