// Generated by Akira v0.0.1
(function () {
  var CallExpression, Identifier, MemberExpression, ast, IdenThen, Do;
  CallExpression = require('ast/CallExpression');
  Identifier = require('ast/Identifier');
  MemberExpression = require('ast/MemberExpression');
  ast = require('ast');
  IdenThen = Identifier('then');
  Do = function () {
    var _$Class;
    _$Class = function (call, f, e) {
      this.call = call;
      this.f = f;
      this.e = e;
      this;
    };
    _$Class.prototype.compile = function (context) {
      var call, f, e;
      call = ast(this.call, context);
      f = ast(this.f, context);
      e = this.e ? [ast(this.e, context)] : [];
      return CallExpression(MemberExpression(call, IdenThen), [f].concat(e));
    };
    return _$Class;
  }.apply(this, arguments);
  return module.exports = Do;
}());