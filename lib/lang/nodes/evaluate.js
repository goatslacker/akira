// Generated by Akira v0.0.1
(function () {
  var ast, esprima, obj2str, Evaluate;
  ast = require('ast');
  esprima = require('esprima');
  obj2str = require('obj2str');
  Evaluate = function () {
    var _$Class;
    _$Class = function (expr, evl) {
      this.expr = expr;
      this.evl = evl;
      this;
    };
    _$Class.prototype.compile = function (context) {
      var a, xform, ast;
      a = ast(this.expr, context);
      return function () {
        if (this.evl) {
          return {__akira: a};
        } else {
          xform = '('.concat(obj2str(a), ')');
          ast = exprima.parse(xform);
          return ast.body[0].expression;
        }
      }.apply(this, arguments);
    };
    return _$Class;
  }.apply(this, arguments);
  module.exports = Evaluate;
}());