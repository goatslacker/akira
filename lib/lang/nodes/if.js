// Generated by Akira v0.0.1
!function() {

var IfStatement, Literal, ast, betaRedex, implicitReturn, If;
IfStatement = require('ast/IfStatement');
Literal = require('ast/Literal');
ast = require('ast');
betaRedex = require('z/betaRedex');
implicitReturn = require('z/implicitReturn');
If = function () {
  var _$Class;
  _$Class = function (test, consequent, alternate) {
    this.test = test;
    this.consequent = consequent;
    this.alternate = alternate;
    this;
  };
  _$Class.prototype.compile = function (context) {
    var test, consequent, alternate, condition, body;
    test = ast(this.test, context);
    consequent = ast(this.consequent, context);
    alternate = ast(this.alternate, context) || Literal(null);
    condition = IfStatement(test, consequent, alternate);
    return function () {
      if (condition.type === 'ConditionalExpression') {
        return condition;
      } else {
        body = [condition];
        implicitReturn(body);
        return betaRedex(body);
      }
    }.apply(this, arguments);
  };
  return _$Class;
}.apply(this, arguments);
return module.exports = If;
}();