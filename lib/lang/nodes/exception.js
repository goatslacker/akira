// Generated by Akira v0.0.1
!function() {

var Identifier, ast, Exception;
Identifier = require('ast/Identifier');
ast = require('ast');
Exception = function () {
  var _$Class;
  _$Class = function (tr, ca, type) {
    this.tr = tr;
    this.ca = ca;
    this.type = type;
    this;
  };
  _$Class.prototype.compile = function (context) {
    var errorType;
    errorType = this.type ? ast(this.type, context) : Identifier('Error');
    return {
      type: 'ThrowStatement',
      argument: {
        type: 'NewExpression',
        callee: errorType,
        arguments: [ast(this.ca, context)]
      }
    };
  };
  return _$Class;
}.apply(this, arguments);
return module.exports = Exception;
}();