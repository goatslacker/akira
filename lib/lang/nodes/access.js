// Generated by Akira v0.0.1
(function () {
  var MemberExpression, ast, unwrapExpressionStatement, Access;
  MemberExpression = require('ast/MemberExpression');
  ast = require('ast');
  unwrapExpressionStatement = require('unwrapExpressionStatement');
  Access = function () {
    var _$Class;
    _$Class = function (id, prop) {
      this.id = id;
      this.prop = prop;
      this.akiraName = 'Access';
    };
    _$Class.prototype.compile = function (context) {
      var id, prop, computed;
      id = unwrapExpressionStatement(ast(this.id, context));
      prop = ast(this.prop, context);
      computed = prop.type === 'Literal';
      return MemberExpression(id, prop, computed);
    };
    return _$Class;
  }.apply(this, arguments);
  return module.exports = Access;
}());