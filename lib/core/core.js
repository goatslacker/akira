module.exports={eq:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},eqVal:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}},consequent:{type:'Identifier',name:'a'},alternate:{type:'Literal',value:null}}}]}},deepEq:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'!==',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'a'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'b'},property:{type:'Identifier',name:'length',__core:!0}}},consequent:{type:'Literal',value:!1},alternate:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'a'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Literal',value:0}},consequent:{type:'Literal',value:!1},alternate:{type:'CallExpression',callee:{type:'Identifier',name:'eq',__core:!0},arguments:[{type:'Literal',value:!0},{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'Identifier',name:'and',__core:!0},{type:'CallExpression',callee:{type:'Identifier',name:'zipWith',__core:!0},arguments:[{type:'Identifier',name:'eq',__core:!0},{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}]}]}]}}}}]}},neq:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'!==',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},gt:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},lt:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'<',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},gte:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>=',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},lte:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'<=',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},and:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'LogicalExpression',operator:'&&',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},or:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'LogicalExpression',operator:'||',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},head:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'_$fv0'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'x'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'x'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv0'},property:{type:'Literal',value:0}}}},{type:'ReturnStatement',argument:{type:'Identifier',name:'x'}}]}},init:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'_$fv0'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'xs'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'x'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv0'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv0'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:1}}]}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'x'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv0'},property:{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv0'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:1}}}}},{type:'ReturnStatement',argument:{type:'Identifier',name:'xs'}}]}},tail:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'_$fv0'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'x'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'xs'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'x'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv0'},property:{type:'Literal',value:0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv0'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv0'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'Identifier',name:'xs'}}]}},last:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'xs'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'xs'},property:{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'xs'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Literal',value:1}}}}]}},get:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'obj'},{type:'Identifier',name:'prop'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'obj'},property:{type:'Identifier',name:'prop'}}}]}},length:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'of'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'of'},property:{type:'Identifier',name:'length',__core:!0}}}]}},join:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'by'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'join',__core:!0}},arguments:[{type:'Identifier',name:'by'}]}}]}},reverse:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'coll'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'coll'},property:{type:'Identifier',name:'reverse',__core:!0}},arguments:[]}}]}},toMap:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'coll'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'x'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'x'},right:{type:'ObjectExpression',properties:[]}}},{type:'ExpressionStatement',expression:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'coll'},property:{type:'Identifier',name:'forEach'}},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'i'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'_$v'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'key'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'val'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'_$v'},right:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'i'}]}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'key',__core:!0},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$v'},property:{type:'Literal',value:0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'val'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$v'},property:{type:'Literal',value:1}}}},{type:'ReturnStatement',argument:{type:'AssignmentExpression',operator:'=',left:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'x'},property:{type:'Identifier',name:'key',__core:!0}},right:{type:'Identifier',name:'val'}}}]}}]}},{type:'ReturnStatement',argument:{type:'Identifier',name:'x'}}]}},concat:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'},{type:'Identifier',name:'c'}],body:{type:'BlockStatement',body:[{type:'SwitchStatement',discriminant:{type:'Literal',value:!1},cases:[{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:1}}},consequent:[{type:'ReturnStatement',argument:{type:'Identifier',name:'a'}}]},{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:2}}},consequent:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'a'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'b'}]}}]},{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:3}}},consequent:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'a'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'b'},{type:'Identifier',name:'c'}]}}]},{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'Literal',value:!0}},consequent:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'a'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'b'}]}}]}},{type:'Identifier',name:'a'}]}}]}]}]}},count:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'},{type:'Identifier',name:'f'}],body:{type:'BlockStatement',body:[{type:'SwitchStatement',discriminant:{type:'Literal',value:!1},cases:[{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:1}}},consequent:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'length',__core:!0}}}]},{type:'SwitchCase',test:{type:'UnaryExpression',operator:'!',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:2}}},consequent:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!1,object:{type:'CallExpression',callee:{type:'Identifier',name:'filter',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}]},property:{type:'Identifier',name:'length',__core:!0}}}]}]}]}},zipWith:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'_$fv1'},{type:'Identifier',name:'_$fv2'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'a'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'as'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'b'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'bs'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'a'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv1'},property:{type:'Literal',value:0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'as',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv1'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv1'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'b'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv2'},property:{type:'Literal',value:0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'bs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv2'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv2'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'LogicalExpression',operator:'||',left:{type:'BinaryExpression',operator:'===',left:{type:'UnaryExpression',operator:'typeof',argument:{type:'Identifier',name:'a'}},right:{type:'Literal',value:'undefined'}},right:{type:'BinaryExpression',operator:'===',left:{type:'UnaryExpression',operator:'typeof',argument:{type:'Identifier',name:'b'}},right:{type:'Literal',value:'undefined'}}},consequent:{type:'ArrayExpression',elements:[]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'ArrayExpression',elements:[{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}]}]},property:{type:'Identifier',name:'concat'}},arguments:[{type:'CallExpression',callee:{type:'Identifier',name:'zipWith',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'as'},{type:'Identifier',name:'bs'}]}]}}}]}},average:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'/',left:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'Identifier',name:'sum',__core:!0},{type:'Identifier',name:'vec'}]},right:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'length',__core:!0}}}}]}},compact:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'filter',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'Boolean'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]}}]}},{type:'Identifier',name:'vec'}]}}]}},flatten:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'},{type:'Identifier',name:'f'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'result'},init:null}],kind:'var'},{type:'IfStatement',test:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'f'},right:{type:'UnaryExpression',operator:'void',argument:{type:'Literal',value:0}}},consequent:{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'f'},right:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'isArray'}}}},alternate:null},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'result'},right:{type:'ArrayExpression',elements:[]}}},{type:'ExpressionStatement',expression:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'forEach'}},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'x'}]},consequent:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'push'}},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'result'},{type:'CallExpression',callee:{type:'Identifier',name:'flatten',__core:!0},arguments:[{type:'Identifier',name:'x'}]}]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'result'},property:{type:'Identifier',name:'push'}},arguments:[{type:'Identifier',name:'x'}]}}}]}}]}},{type:'ReturnStatement',argument:{type:'Identifier',name:'result'}}]}},concatMap:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'result'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'result'},right:{type:'ArrayExpression',elements:[]}}},{type:'ExpressionStatement',expression:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'forEach'}},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'item'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'item'},right:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'x'}]}}},{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'isArray'}},arguments:[{type:'Identifier',name:'item'}]},consequent:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'push'}},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'result'},{type:'Identifier',name:'item'}]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'result'},property:{type:'Identifier',name:'push'}},arguments:[{type:'Identifier',name:'item'}]}}}]}}]}},{type:'ReturnStatement',argument:{type:'Identifier',name:'result'}}]}},assert:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'IfStatement',test:{type:'BinaryExpression',operator:'!==',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}},consequent:{type:'BlockStatement',body:[{type:'ThrowStatement',argument:{type:'NewExpression',callee:{type:'Identifier',name:'Error'},arguments:[{type:'BinaryExpression',operator:'+',left:{type:'BinaryExpression',operator:'+',left:{type:'BinaryExpression',operator:'+',left:{type:'BinaryExpression',operator:'+',left:{type:'Literal',value:'Expected '},right:{type:'Identifier',name:'(a)'}},right:{type:'Literal',value:' == '}},right:{type:'Identifier',name:'(b)'}},right:{type:'Literal',value:''}}]}},{type:'ReturnStatement',argument:{type:'Literal',value:!1}}]},alternate:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'Literal',value:!0}}]}}]}},property:{type:'Identifier',name:'apply'}},arguments:[{type:'Identifier',name:'this'},{type:'Identifier',name:'arguments'}],__betaRedex:!0}}]}},find:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'ds'}],body:{type:'BlockStatement',body:[{type:'ForInStatement',left:{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'i'},init:null}],kind:'var'},right:{type:'Identifier',name:'ds'},body:{type:'BlockStatement',body:[{type:'IfStatement',test:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'ds'},property:{type:'Identifier',name:'i'}}]},right:{type:'Literal',value:!0}},consequent:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'Identifier',name:'i'}}]},alternate:null}]},each:!1}]}},call:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'obj'},{type:'Identifier',name:'prop'},{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:2},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'obj'},property:{type:'Identifier',name:'prop'}},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'obj'},{type:'Identifier',name:'args'}]}}]}},keys:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'keys',__core:!0}},values:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'map',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'k'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'x'},property:{type:'Identifier',name:'k'}}}]}},{type:'CallExpression',callee:{type:'Identifier',name:'keys',__core:!0},arguments:[{type:'Identifier',name:'x'}]}]}}]}},key:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'v'},{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'find',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'it'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'it'},right:{type:'Identifier',name:'v'}}}]}},{type:'Identifier',name:'x'}]}}]}},value:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'k'},{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'x'},property:{type:'Identifier',name:'k'}}}]}},filter:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'filter',__core:!0}},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]}}]}}]}}]}},any:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'some'}},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]}}]}}]}}]}},all:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'every'}},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]}}]}}]}}]}},map:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'map',__core:!0}},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]}}]}}]}}]}},foldl:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'},{type:'Identifier',name:'a'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'reduce'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'reducer'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'reduce'},right:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'reduce'}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'reducer'},right:{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}},{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:1}}]}}]}}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'IfStatement',test:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Literal',value:0}},consequent:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ArrayExpression',elements:[]}}]},alternate:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'UnaryExpression',operator:'typeof',argument:{type:'Identifier',name:'a'}},right:{type:'Literal',value:'undefined'}},consequent:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'reduce'},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'Identifier',name:'reducer'}]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'reduce'},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'Identifier',name:'reducer'},{type:'Identifier',name:'a'}]}}}]}}]}},property:{type:'Identifier',name:'apply'}},arguments:[{type:'Identifier',name:'this'},{type:'Identifier',name:'arguments'}],__betaRedex:!0}}]}},foldr:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Literal',value:0}},consequent:{type:'ArrayExpression',elements:[]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'reduceRight'}},property:{type:'Identifier',name:'call',__core:!0}},arguments:[{type:'Identifier',name:'vec'},{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}},{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:1}}]}}]}}]}}}]}},Promise:{type:'CallExpression',callee:{type:'Identifier',name:'require'},arguments:[{type:'Literal',value:'bluebird'}]},requireNodeAsync:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'m'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Promise',__core:!0},property:{type:'Identifier',name:'promisifyAll'}},arguments:[{type:'CallExpression',callee:{type:'Identifier',name:'require'},arguments:[{type:'Identifier',name:'m'}]}]}}]}},intersect:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec1'},{type:'Identifier',name:'vec2'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'filter',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'!==',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec2'},property:{type:'Identifier',name:'indexOf'}},arguments:[{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'arguments'},property:{type:'Literal',value:0}}]},right:{type:'UnaryExpression',operator:'-',argument:{type:'Literal',value:1}}}}]}},{type:'Identifier',name:'vec1'}]}}]}},max:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'>',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}},consequent:{type:'Identifier',name:'a'},alternate:{type:'Identifier',name:'b'}}}]}},{type:'Identifier',name:'vec'}]}}]}},min:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'<',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}},consequent:{type:'Identifier',name:'a'},alternate:{type:'Identifier',name:'b'}}}]}},{type:'Identifier',name:'vec'}]}}]}},nothing:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'MemberExpression',computed:!1,object:{type:'CallExpression',callee:{type:'Identifier',name:'filter',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'vec'}]},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Literal',value:0}}}]}},randomize:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'sort'},arguments:[{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Math'},property:{type:'Identifier',name:'random'}},arguments:[]},right:{type:'Literal',value:.5}}}]}},{type:'Identifier',name:'vec'}]}}]}},take:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:0},{type:'Identifier',name:'n'}]}}]}},drop:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'},{type:'Identifier',name:'vec'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'vec'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Identifier',name:'n'}]}}]}},takeWhile:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'_$fv1'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'x'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'xs'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'x'},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'_$fv1'},property:{type:'Literal',value:0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv1'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'_$fv1'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'x'}]},right:{type:'Literal',value:!0}},consequent:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'ArrayExpression',elements:[{type:'Identifier',name:'x'}]},property:{type:'Identifier',name:'concat'}},arguments:[{type:'CallExpression',callee:{type:'Identifier',name:'takeWhile',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'xs'}]}]},alternate:{type:'ArrayExpression',elements:[]}}}]}},apply:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args'}]}}]}},compose:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'g'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'CallExpression',callee:{type:'Identifier',name:'g'},arguments:[{type:'Identifier',name:'x'}]}]}}]}}}]}},sequence:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'g'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'g'},arguments:[{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'x'}]}]}}]}}}]}},id:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'Identifier',name:'a'}}]}},flip:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'f'},arguments:[{type:'Identifier',name:'b'},{type:'Identifier',name:'a'}]}}]}},partial:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'xargs',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xargs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'f'},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'args'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'xargs'}]}]}}]}}}]}},copy:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'},{type:'Identifier',name:'y'}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'keys',__core:!0}},arguments:[{type:'Identifier',name:'y'}]},property:{type:'Identifier',name:'forEach'}},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'k'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'AssignmentExpression',operator:'=',left:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'x'},property:{type:'Identifier',name:'k'}},right:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'y'},property:{type:'Identifier',name:'k'}}}}]}}]}},{type:'ReturnStatement',argument:{type:'Identifier',name:'x'}}]}},partialr:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'xargs',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xargs',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'f'},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'xargs'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'args'}]}]}}]}}}]}},curry:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'l'},init:null},{type:'VariableDeclarator',id:{type:'Identifier',name:'c'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'l'},right:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'length',__core:!0}}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'c'},right:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'args'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'arg',__rest:!0}],body:{type:'BlockStatement',body:[{type:'VariableDeclaration',declarations:[{type:'VariableDeclarator',id:{type:'Identifier',name:'xargs'},init:null}],kind:'var'},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'arg',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'xargs'},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'args'},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'arg'}]}}},{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'<',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'xargs'},property:{type:'Identifier',name:'length',__core:!0}},right:{type:'Identifier',name:'l'}},consequent:{type:'CallExpression',callee:{type:'Identifier',name:'c'},arguments:[{type:'Identifier',name:'xargs'}]},alternate:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'xargs'}]}}}]}}}]}}}},{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'<',left:{type:'Identifier',name:'l'},right:{type:'Literal',value:1}},consequent:{type:'Identifier',name:'f'},alternate:{type:'CallExpression',callee:{type:'Identifier',name:'c'},arguments:[{type:'ArrayExpression',elements:[]}]}}}]}},bind:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:1},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'FunctionExpression',id:null,params:[],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'f'},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'f'},{type:'Identifier',name:'args'}]}}]}}}]}},maybeSeq:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'ConditionalExpression',test:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'a'},right:{type:'Literal',value:null}},consequent:{type:'Literal',value:null},alternate:{type:'CallExpression',callee:{type:'Identifier',name:'b'},arguments:[{type:'Identifier',name:'a'}]}}}]}},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'ArrayExpression',elements:[{type:'Literal',value:!0}]},property:{type:'Identifier',name:'concat'}},arguments:[{type:'Identifier',name:'args'}]}]}}]}},show:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'i'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'i'},property:{type:'Identifier',name:'toString'}},arguments:[]}}]}},mod:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'%',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitAnd:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'&',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitOr:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'|',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitXor:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'^',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitShiftl:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'<<',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitShiftr:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>>',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},bitUshiftr:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>>>',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},square:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'*',left:{type:'Identifier',name:'x'},right:{type:'Identifier',name:'x'}}}]}},sum:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'+',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},sub:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'-',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},prod:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'*',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},div:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'/',left:{type:'Identifier',name:'a'},right:{type:'Identifier',name:'b'}}}]}},even:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'BinaryExpression',operator:'%',left:{type:'Identifier',name:'n'},right:{type:'Literal',value:2}},right:{type:'Literal',value:0}}}]}},odd:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'!==',left:{type:'BinaryExpression',operator:'%',left:{type:'Identifier',name:'n'},right:{type:'Literal',value:2}},right:{type:'Literal',value:0}}}]}},abs:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Math'},property:{type:'Identifier',name:'abs',__core:!0}},arguments:[{type:'Identifier',name:'n'}]}}]}},sqrt:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'n'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Math'},property:{type:'Identifier',name:'sqrt',__core:!0}},arguments:[{type:'Identifier',name:'n'}]}}]}},pow:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Math'},property:{type:'Identifier',name:'pow',__core:!0}},arguments:[{type:'Identifier',name:'a'},{type:'Identifier',name:'b'}]}}]}},inc:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'+',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:1}}}]}},dec:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'-',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:1}}}]}},false$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:!1}}}]}},true$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:!0}}}]}},pos$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'>',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:0}}}]}},neg$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'<',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:0}}}]}},zero$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:0}}}]}},num$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'toString'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'x'}]},right:{type:'Literal',value:'[object Number]'}}}]}},str$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'toString'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'x'}]},right:{type:'Literal',value:'[object String]'}}}]}},map$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'toString'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'x'}]},right:{type:'Literal',value:'[object Object]'}}}]}},vector$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Object'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'toString'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'x'}]},right:{type:'Literal',value:'[object Array]'}}}]}},bool$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'LogicalExpression',operator:'||',left:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:!0}},right:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:!1}}}}]}},none$QUOT:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'x'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'BinaryExpression',operator:'===',left:{type:'Identifier',name:'x'},right:{type:'Literal',value:null}}}]}},camelize:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'replace'}},arguments:[{type:'Literal',value:/(-|_)+([a-zA-Z0-9$_])/g},{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'i'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'i'},property:{type:'Literal',value:1}},property:{type:'Identifier',name:'toUpperCase'}},arguments:[]}}]}}]}}]}},uppercase:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'toUpperCase'}},arguments:[]}}]}},stringify:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'foldl',__core:!0},arguments:[{type:'Identifier',name:'concat',__core:!0},{type:'Identifier',name:'args'}]}}]}},capitalize:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!0,object:{type:'Identifier',name:'str'},property:{type:'Literal',value:0}},property:{type:'Identifier',name:'toUpperCase'}},arguments:[]},property:{type:'Identifier',name:'concat'}},arguments:[{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'slice'}},arguments:[{type:'Literal',value:1}]}]}}]}},chars:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'map',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'split'}},arguments:[{type:'Literal',value:''}]}]}}]}},condense:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'replace'}},arguments:[{type:'Literal',value:/\ /g},{type:'Literal',value:''}]}}]}},lines:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'map',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'split'}},arguments:[{type:'Literal',value:'\n'}]}]}}]}},words:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'f'},{type:'Identifier',name:'str'}],body:{type:'BlockStatement',body:[{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'Identifier',name:'map',__core:!0},arguments:[{type:'Identifier',name:'f'},{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'str'},property:{type:'Identifier',name:'split'}},arguments:[{type:'Literal',value:' '}]}]}}]}},print:{type:'FunctionExpression',id:null,params:[{type:'Identifier',name:'args',__rest:!0}],body:{type:'BlockStatement',body:[{type:'ExpressionStatement',expression:{type:'AssignmentExpression',operator:'=',left:{type:'Identifier',name:'args',__rest:!0},right:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'Array'},property:{type:'Identifier',name:'prototype'}},property:{type:'Identifier',name:'slice'}},property:{type:'Identifier',name:'call'}},arguments:[{type:'Identifier',name:'arguments'},{type:'Literal',value:0},{type:'BinaryExpression',operator:'-',left:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'arguments'},property:{type:'Identifier',name:'length'}},right:{type:'Literal',value:0}}]}}},{type:'ReturnStatement',argument:{type:'CallExpression',callee:{type:'MemberExpression',computed:!1,object:{type:'MemberExpression',computed:!1,object:{type:'Identifier',name:'console'},property:{type:'Identifier',name:'log'}},property:{type:'Identifier',name:'apply',__core:!0}},arguments:[{type:'Identifier',name:'console'},{type:'Identifier',name:'args'}]}}]}},Set:{type:'CallExpression',callee:{type:'Identifier',name:'require'},arguments:[{type:'Literal',value:'collections/set'}]},Dict:{type:'CallExpression',callee:{type:'Identifier',name:'require'},arguments:[{type:'Literal',value:'collections/dict'}]},Map:{type:'CallExpression',callee:{type:'Identifier',name:'require'},arguments:[{type:'Literal',value:'collections/map'}]}}